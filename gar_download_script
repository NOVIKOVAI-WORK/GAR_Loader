#!/bin/bash

# variables
gar_dir="/usr/sap/tmp/GAR"
gar_script_dir="/usr/sap/tmp/GAR_LOADER"
log_file="gar_download.log"

#=========================================================================================================================
# Option 1: manual input
# $1 this is variable key for running script
if [ "$1" == "-m" ]; then
# loop: check input correct key y or n
  while true; do
  # clear failed logs
  read -p "Clear failed logs y(yes)/n(no) ? " clear_log
    if [ "$clear_log" == "y" ] || [ "$clear_log" == "n" ]; then
      break
    fi
    echo "Invalid input, please enter 'y' or 'n'"
  done
  if [ "$clear_log" == "y" ]; then
    # delete line in the log file with "failed"
    line_number=$(grep -n "failed" $log_file | tail -1 | cut -d: -f1)
    if [ ! -z "$line_number" ]; then
      sed -i "/failed/d" $log_file
    fi
  fi
    # Clear directory GAR
      if [ "$clear_log" == "y" ] || [ "$clear_log" == "n" ]; then
      # loop: check input correct key y or n
      while true; do
      read -p "Clear all content in directory GAR y(yes)/n(no) ? " clear_data
        if [ "$clear_data" == "y" ] || [ "$clear_data" == "n" ]; then
          break
        fi
        echo "Invalid input, please enter 'y' or 'n'"
      done
        if [ "$clear_data" == "y" ]; then
          rm -rf $gar_dir/*
        fi
      fi
   # check failed logs if set key n
  if [ "$clear_log" == "n" ]; then
    # Check if the last entry in the log file is "failed"
      if tail -1 "$log_file" | grep -q "failed"; then
        echo "Last download failed, script will not continue"
        echo "Please delete last line 'Download and unzip failed:date' in log file gar_download.log after resolve error"
        exit 1
      fi
  fi
  # Choise if you need download GAR delta or not
# loop: check input correct key y or n
while true; do
  read -p "Do you need download GAR delta y(yes)/n(no) ? " download_choise
    if [ "$download_choise" == "y" ] || [ "$download_choise" == "n" ]; then
      break
    fi
    echo "Invalid input, please enter 'y' or 'n'"
done
      if [ "$download_choise" == "n" ]; then
        exit 1
      fi
while true; do
  read -p "Enter the date for download GAR delta (YYYY.MM.DD): " date
    if [[ $date =~ ^[0-9]{4}.[0-9]{2}.[0-9]{2}$ ]]; then
    break
  fi
  echo "Error: invalid date format"
done
  url="https://fias-file.nalog.ru/downloads/${date}/gar_delta_xml.zip"
#=========================================================================================================================
# Option 2: automatic run
elif [ "$1" == "-a" ]; then
  date=$(date +%Y.%m.%d)
  url="https://fias-file.nalog.ru/downloads/${date}/gar_delta_xml.zip"
  # Check if the last entry in the log file is "failed"
  if tail -1 "$log_file" | grep -q "failed"; then
    echo "Last download failed, script will not continue"
    echo "Please delete last line 'Download and unzip failed:date' in log file gar_download.log after resolve error"
    exit 1
  fi
else
  echo "Invalid option. Please use -m for manual input or -a for automatic run."
  exit 1
fi
# Remove the contents of the GAR directory
rm -rf ${gar_dir}/*
# Download the archive
# variable number of attempts connection
attempt=0
while [ $attempt -lt 5 ]; do
  wget ${url} -P ${gar_dir}
    if [ $? -eq 0 ]; then
    break
    fi
  attempt=$((attempt + 1))
    echo "failed: connection time out:"${date} >> ${gar_script_dir}/${log_file}
done
if [ $attempt -eq 5 ]; then
  echo "Error: failed to download file after 5 attempts:"${date} >> ${gar_script_dir}/${log_file}
fi
# Unzip the archive
unzip ${gar_dir}/gar_delta_xml.zip -d ${gar_dir}
# Check if unzip was successful
if [ $? -eq 0 ]; then
  echo "Download and unzip successful:"${date} >> ${gar_script_dir}/${log_file}
  echo "Download and unzip successful:"${date}
else
  echo "Download and unzip failed:"${date} >> ${gar_script_dir}/${log_file}
  echo "Download and unzip failed:"${date}
  rm -rf ${gar_dir}/*
fi
# Remove the downloaded archive
rm ${gar_dir}/gar_delta_xml.zip